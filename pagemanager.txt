$env:PM_SECRET_KEY = ''

session_id.signature

site_id.user_id.signature

site_id.user_id.session_id.signature

for singlesite and multisite, setting PM_SECRET_KEY is mandatory
actually the only effect of not having PM_SCERET_KEY is that cookies cannot have user_id attached (to skip the pm_session lookup)
cookies don't need a secret key either, they just get one-way-hashed with blake2b

offline, singlesite, multisite
if you start the application in offline mode

if cookies are indeed scoped to each subdomain separately, there is no way to have a 'subscribe to blog' interface across all blogiverse sites. Because when they click on 'subscribe', there is no way for bob.blogiverse.io to know that the current user is alice because the session is only valid for alice.blogiverse.io.
    maybe all subscriptions are done by a HTTP call to the blogiverse.io domain (through a pop up window like when clicking on a facebook 'share' button). If the user currently has user cookies for the blogiverse.io domain the HTTP call would succeed and auto close, else it would present the user with a login menu (after which the user cookie would be set and subsequent calls to the /subscribe endpoint would automatically succeed)

given a filename, the mechanism in which the templates plugin retrieves the json config should be abstracted away behind an interface. This allows it to possibly make a network call to retrieve the config instead.

Domain Objects
--------------
- Sites
- Users
- URLs
    - A site admin want to grant users access to only a subset of URLs

Read
Write
ReadWrite

0 00
1 01
2 10
3 11

Policies: Read

Admins
Users
URLs

Superadmins
- Add users
- Assign 'admin' and 'superadmin' role to users
- Set access policies

Admins
- Add users
- Assign roles (other than 'admin' or 'superadmin') to users
- Read/Write access to the URL dashboard

Users
- Assign tags (owned by their roles) to objects they create
    - The only objects right now are: Pages and Posts

Objects: user, admin_role, role, url
Object tags: user, admin_role, role, url
Roles: superadmin, admin, user

user.read: superadmin, admin
user.write: superadmin, admin
admin_role.read: superadmin
admin_role.write: superadmin
role.read: admin
role.write: admin
url.read: admin, user
url.write: admin

a theme is a collection of templates
a plugin is a collection of handlers

superadmin
admin
github.com/kathyp/shop:store-owner
